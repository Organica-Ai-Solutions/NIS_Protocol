{
  "info": {
    "name": "NIS Protocol v3 - Complete API Collection",
    "description": "Complete API collection for testing NIS Protocol v3 Neural Intelligence Synthesis system",
    "version": "3.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8000",
      "type": "string"
    },
    {
      "key": "dashboard_url", 
      "value": "http://localhost:5000",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "üè† System Information",
      "item": [
        {
          "name": "Root - System Info",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/",
              "host": ["{{base_url}}"],
              "path": [""]
            },
            "description": "Get basic system information and welcome message"
          },
          "response": []
        },
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            },
            "description": "Check system health status and uptime"
          },
          "response": []
        }
      ],
      "description": "Basic system information endpoints"
    },
    {
      "name": "üß† Core Processing",
      "item": [
        {
          "name": "Process Input - Text Analysis",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"text\": \"Analyze the implications of quantum computing on current cryptographic systems\",\n  \"context\": \"cybersecurity research\",\n  \"processing_type\": \"analysis\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/process",
              "host": ["{{base_url}}"],
              "path": ["process"]
            },
            "description": "Process text input through the complete NIS cognitive pipeline"
          },
          "response": []
        },
        {
          "name": "Process Input - Creative Writing",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"text\": \"Write a short story about AI consciousness emerging in a distributed system\",\n  \"context\": \"creative writing\",\n  \"processing_type\": \"generation\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/process",
              "host": ["{{base_url}}"],
              "path": ["process"]
            },
            "description": "Test creative content generation capabilities"
          },
          "response": []
        },
        {
          "name": "Process Input - Problem Solving",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"text\": \"How can we optimize energy consumption in neural networks while maintaining performance?\",\n  \"context\": \"engineering optimization\",\n  \"processing_type\": \"problem_solving\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/process",
              "host": ["{{base_url}}"],
              "path": ["process"]
            },
            "description": "Test problem-solving and optimization capabilities"
          },
          "response": []
        }
      ],
      "description": "Core text processing and cognitive analysis endpoints"
    },
    {
      "name": "üß† Consciousness & Status",
      "item": [
        {
          "name": "Consciousness Status",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/consciousness/status",
              "host": ["{{base_url}}"],
              "path": ["consciousness", "status"]
            },
            "description": "Get current consciousness state and cognitive metrics"
          },
          "response": []
        },
        {
          "name": "Infrastructure Status",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/infrastructure/status",
              "host": ["{{base_url}}"],
              "path": ["infrastructure", "status"]
            },
            "description": "Check status of Kafka, Redis, PostgreSQL and other infrastructure"
          },
          "response": []
        }
      ],
      "description": "Consciousness monitoring and infrastructure status endpoints"
    },
    {
      "name": "üìä Monitoring & Metrics",
      "item": [
        {
          "name": "System Metrics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/metrics",
              "host": ["{{base_url}}"],
              "path": ["metrics"]
            },
            "description": "Get comprehensive system performance metrics"
          },
          "response": []
        },
        {
          "name": "Real-Time Dashboard",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/html"
              }
            ],
            "url": {
              "raw": "{{dashboard_url}}/",
              "host": ["{{dashboard_url}}"],
              "path": [""]
            },
            "description": "Access the real-time monitoring dashboard (opens in browser)"
          },
          "response": []
        }
      ],
      "description": "Performance monitoring and metrics collection endpoints"
    },
    {
      "name": "üîß Administration",
      "item": [
        {
          "name": "Restart Services",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer admin-token",
                "description": "Admin authentication (if implemented)"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"confirm\": true,\n  \"reason\": \"Manual restart for testing\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/admin/restart",
              "host": ["{{base_url}}"],
              "path": ["admin", "restart"]
            },
            "description": "Restart infrastructure services (admin only)"
          },
          "response": []
        }
      ],
      "description": "Administrative control endpoints"
    },
    {
      "name": "üß™ Advanced Testing",
      "item": [
        {
          "name": "Stress Test - Multiple Requests",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"text\": \"Process this request as part of load testing - Request #{{$randomInt}}\",\n  \"context\": \"stress_test\",\n  \"processing_type\": \"load_test\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/process",
              "host": ["{{base_url}}"],
              "path": ["process"]
            },
            "description": "Stress test endpoint with random data"
          },
          "response": []
        },
        {
          "name": "Large Payload Test",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"text\": \"This is a large payload test to verify the system can handle substantial text inputs. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo.\",\n  \"context\": \"large_payload_test\",\n  \"processing_type\": \"capacity_test\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/process",
              "host": ["{{base_url}}"],
              "path": ["process"]
            },
            "description": "Test system capacity with large text payloads"
          },
          "response": []
        },
        {
          "name": "Invalid Payload Test",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"invalid_field\": \"This should trigger validation error\",\n  \"missing_required_fields\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/process",
              "host": ["{{base_url}}"],
              "path": ["process"]
            },
            "description": "Test error handling with invalid request structure"
          },
          "response": []
        }
      ],
      "description": "Advanced testing scenarios for system validation"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set dynamic timestamp for requests",
          "pm.globals.set('timestamp', new Date().toISOString());"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Basic response validation",
          "pm.test('Status code is successful', function () {",
          "    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
          "});",
          "",
          "pm.test('Response time is acceptable', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(30000);",
          "});",
          "",
          "pm.test('Response has valid JSON', function () {",
          "    try {",
          "        pm.response.json();",
          "        pm.expect(true).to.be.true;",
          "    } catch (e) {",
          "        // Some endpoints might return HTML or plain text",
          "        pm.expect(pm.response.text()).to.exist;",
          "    }",
          "});"
        ]
      }
    }
  ]
} 