# âœ… REAL: NVIDIA NIM Production Configuration
# Copy this file to .env and configure your NGC API key

# =============================================================================
# NVIDIA NGC API CONFIGURATION
# =============================================================================
# Your NGC API key from https://ngc.nvidia.com/setup/api-key
NGC_API_KEY=your_ngc_api_key_here

# =============================================================================
# NVIDIA NIM SERVICE CONFIGURATION
# =============================================================================
# Base URL for NIM service (adjust if using different deployment)
NIM_BASE_URL=http://localhost:8000

# NIM Models to deploy
NIM_MODELS=meta/llama3-8b-instruct,meta/llama3-70b-instruct

# GPU Configuration
NIM_GPU_COUNT=1
NIM_GPU_MEMORY=24GB

# =============================================================================
# NIS PROTOCOL INTEGRATION
# =============================================================================
# Enable real NVIDIA NIM integration
ENABLE_NVIDIA_NIM=true

# NIS Protocol configuration
NIS_ENVIRONMENT=production
NIS_LOG_LEVEL=INFO

# Real physics and signal processing
ENABLE_REAL_LAPLACE=true
ENABLE_REAL_KAN=true
ENABLE_REAL_PINN=true

# Performance optimization
ENABLE_TOKEN_EFFICIENCY=true
TOKEN_EFFICIENCY_TARGET=0.67

# =============================================================================
# KUBERNETES DEPLOYMENT (if using K8s)
# =============================================================================
K8S_NAMESPACE=nis-protocol
K8S_STORAGE_CLASS=standard
K8S_PVC_SIZE=50Gi

# =============================================================================
# MONITORING AND OBSERVABILITY
# =============================================================================
# OpenTelemetry configuration
OTEL_ENABLED=true
OTEL_SERVICE_NAME=nis-protocol
OTEL_EXPORTER_ENDPOINT=http://localhost:4318

# =============================================================================
# PRODUCTION DEPLOYMENT SETTINGS
# =============================================================================
# Enable production features
PRODUCTION_MODE=true
ENABLE_HEALTH_CHECKS=true
ENABLE_METRICS=true
ENABLE_TRACING=true

# Security settings
ENABLE_AUTHENTICATION=true
ENABLE_ENCRYPTION=true

# Scalability settings
MAX_CONCURRENT_REQUESTS=100
REQUEST_TIMEOUT=300

# =============================================================================
# DEVELOPMENT AND TESTING
# =============================================================================
# Enable development features (set to false in production)
DEBUG_MODE=false
ENABLE_MOCK_FALLBACKS=false

# Testing configuration
ENABLE_LOAD_TESTING=false
LOAD_TEST_CONCURRENCY=10

# =============================================================================
# MODEL CONFIGURATIONS
# =============================================================================

# Llama 3 8B Instruct (Primary model)
LLAMA3_8B_ENABLED=true
LLAMA3_8B_MAX_TOKENS=2048
LLAMA3_8B_TEMPERATURE=0.7

# Llama 3 70B Instruct (Secondary model for complex tasks)
LLAMA3_70B_ENABLED=false  # Set to true when deploying larger model
LLAMA3_70B_MAX_TOKENS=4096
LLAMA3_70B_TEMPERATURE=0.7

# =============================================================================
# PHYSICS AND SIGNAL PROCESSING
# =============================================================================
# Real physics validation parameters
PHYSICS_VALIDATION_ENABLED=true
CONSERVATION_LAW_CHECKING=true
UNCERTAINTY_PRINCIPLE_VALIDATION=true

# Signal processing parameters
SIGNAL_SAMPLING_RATE=44100
FFT_WINDOW_SIZE=1024
FREQUENCY_BINS=512

# =============================================================================
# AUTONOMOUS SYSTEM CONFIGURATION
# =============================================================================
# Enable autonomous operation features
AUTONOMOUS_MODE=true
SELF_HEALING_ENABLED=true
RESOURCE_MANAGEMENT=true

# Safety constraints
ENABLE_SAFETY_CONSTRAINTS=true
MAX_SYSTEM_TEMPERATURE=85
MAX_MEMORY_USAGE=90

# =============================================================================
# DEPLOYMENT SPECIFIC SETTINGS
# =============================================================================
# Docker deployment
DOCKER_IMAGE_TAG=latest
DOCKER_REGISTRY=nvcr.io

# Helm deployment
HELM_CHART_VERSION=1.0.3
HELM_DEPLOYMENT_NAME=nis-protocol

# =============================================================================
# PERFORMANCE BENCHMARKING
# =============================================================================
# Enable performance validation
ENABLE_BENCHMARKING=true
BENCHMARK_INTERVAL=300  # seconds
PERFORMANCE_TARGET_EFFICIENCY=0.67

# =============================================================================
# LOGGING AND MONITORING
# =============================================================================
LOG_TO_FILE=true
LOG_FILE_PATH=/var/log/nis-protocol/nis.log
LOG_MAX_SIZE=100MB
LOG_BACKUP_COUNT=5

# =============================================================================
# BACKUP AND RECOVERY
# =============================================================================
ENABLE_BACKUP=true
BACKUP_INTERVAL=3600  # seconds
BACKUP_RETENTION_DAYS=30
BACKUP_PATH=/var/backup/nis-protocol

# =============================================================================
# INTEGRATION SETTINGS
# =============================================================================
# External service integrations
ENABLE_EXTERNAL_APIS=true
API_RATE_LIMIT=1000  # requests per hour

# Database configuration (if needed)
DATABASE_URL=postgresql://localhost/nis_protocol
DATABASE_POOL_SIZE=10

# Redis configuration (for caching)
REDIS_URL=redis://localhost:6379
REDIS_POOL_SIZE=20

# =============================================================================
# ADVANCED CONFIGURATION
# =============================================================================
# Custom model paths
CUSTOM_MODEL_PATH=/opt/nis/models

# Plugin system
ENABLE_PLUGINS=false
PLUGIN_PATH=/opt/nis/plugins

# Custom processing pipelines
ENABLE_CUSTOM_PIPELINES=false
PIPELINE_CONFIG_PATH=/opt/nis/config/pipelines.json

# =============================================================================
# PRODUCTION SAFETY
# =============================================================================
# Emergency stop configuration
EMERGENCY_STOP_ENABLED=true
EMERGENCY_STOP_KEY=your_emergency_stop_key_here

# System health monitoring
HEALTH_CHECK_INTERVAL=30  # seconds
HEALTH_CHECK_TIMEOUT=10  # seconds

# Circuit breaker settings
CIRCUIT_BREAKER_ENABLED=true
CIRCUIT_BREAKER_THRESHOLD=0.95
CIRCUIT_BREAKER_RECOVERY_TIME=300

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================
#
# 1. Copy this file to your .env:
#    cp scripts/nvidia_nim_config.env .env
#
# 2. Set your NGC API key:
#    export NGC_API_KEY='your_actual_ngc_api_key'
#
# 3. Deploy NVIDIA NIM:
#    ./scripts/deploy_nvidia_nim.sh
#
# 4. Start NIS Protocol:
#    ./start.sh
#
# 5. Verify deployment:
#    curl http://localhost:8000/v1/models
#
# =============================================================================
