name: Build and Deploy

on:
  push:
    branches:
      - main
  release:
    types: [published]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    name: Build Package
    runs-on: ubuntu-latest
    timeout-minutes: 20  # Prevent hanging builds
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: pip
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build wheel
          # Use minimal requirements for deployment to avoid heavy ML packages
          pip install -r requirements-minimal.txt
          
      - name: Build package
        run: python -m build
        
      - name: Store distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  deploy-docs:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - uses: actions/checkout@v4
        
      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: .
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  publish-to-testpypi:
    name: Publish to TestPyPI
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/nis-protocol
    
    permissions:
      id-token: write
    
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
          
      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          repository-url: https://test.pypi.org/legacy/

  publish-to-pypi:
    name: Publish to PyPI
    needs: [build, publish-to-testpypi]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    
    environment:
      name: pypi
      url: https://pypi.org/p/nis-protocol
    
    permissions:
      id-token: write
    
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
          
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.12.4 